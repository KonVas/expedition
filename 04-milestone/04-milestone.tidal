-- make from scratch
-- probably: kr, oh, k

cps 1

import Sound.Tidal.MIDI.Output
import Sound.Tidal.SimpleSynth
keyStreams <- keyproxy 1 "Scarlett 18i8 USB" [(keys, 1),(keys, 2),(keys, 3),(keys, 4),(keys, 5),(keys, 6),(keys, 7),(keys, 8),(keys, 9),(keys, 10),(keys, 11),(keys, 12),(keys, 13),(keys, 14),(keys, 15),(keys, 16)]
[bd, sd, rs, cp, bt, lt, mt, ht, ch, oh, cy, cb, k13, k14, k15, k16] <- sequence keyStreams

-- reference
d1 $ stack [
sound "~ [trans1kr trans1kr ~ ~]" |+| end "0.5" |+| shape "0.2",
(|+| cutoff (scale 0.001 0.2 $ slow 10 sine1)) $
foldEvery [2,3,4,5,6,7] (density 2) . slowspread (chop) [16,32,24,8,64] $ sound "trans1k1*8" |+| end "0.5" |+| speed "{7 6 10 9 8}%1" |+| resonance "0.5" |+| gain "0.9" |+| delay "0.5",
density 2 $ sound "~ trans1oh" |+| delay "0.3" |+| end "0.2" |+| cutoff "0.1" |+| resonance "0.01"] |+| delaytime "0.45" |+| delayfeedback "0.5"

--
k16 $ note "[47*2 ~] ~" |+| dur "0.07"

d1 $ whenmod 20 16 (iter 4) $ whenmod 50 42 (slow (4/3)) $ whenmod 40 32 (slow (4/3)) $ whenmod 32 26 (slow (4/3)) $
whenmod 32 10 ( whenmod 12 10 (trunc 0.25) . every 7 (gap 4 . slow 2) . every 6 (chop 16 . slow 2) . every 4 (rev) . every 8 (slow 2) .
every 5 (rip' 0 1 8 0.2 0.2) . foldEvery [3,4] (17.25 <~) . every 9 (|+| up (run 16))) $ stack [
whenmod 12 8 ((|+| coarse "{8 12 16}%8") . stut 2 1 0.25) $ whenmod 20 10 ((|+| speed "-1") . (|+| end rand)) $ sound "milekr" |+| cut "1"
|+| delay "0.3",
whenmod 7 5 (jux (iter 4)) $ every 5 (|+| coarse "{4 8 6}%8") $ sound "~ [kit3:4*2 milek2/2]" |+| cut "2" |+| speed "1 [0.8 1.2]" |+| gain "1 [0.8 1]",
density 2 $ sound "~ mileoh" |+| cutoff (scale 0.01 0.1 $ slow 16 sine1) |+| resonance "0.01" |+| cut "4" |+| end "0.18" |+| delay "0.3",
(|+| cutoff (scale 0.001 0.2 $ slow 16 sine1)) $ whenmod 12 8 (slow (4/3)) $ whenmod 25 17 (slow (4/3)) $ whenmod 18 12 (slow (4/3)) $ whenmod 30 20 (slow (4/3)) $
sound "kit3:8*32" |+| resonance "0.1" |+| speed "1" |+| gain "0.8" |+| cut "100" ]
|+| delaytime "0.65" |+| delayfeedback "0.7"

hush

k16 silence
