let rip a b p = within (0.25, 0.75) (slow 2 . rev . stut 8 a b) p
let rip' a b c d e p = within (a, b) (slow 2 . rev . stut c d e) p
let up = speed . ((1.059466**) <$>)

bps (130/120)

d1 $ whenmod 20 16 (slow 2) $ stack[ whenmod 8 5 (iter 4) $
every 2 (rev) $ gap 4 $ slowspread (chop) [16,8,4,32] $ slowspread (slow) [1.5,3,2,4] $
foldEvery [2,3] (0.25 ~>) $ degrade $ sound (samples "[monst*2 kit3]*2 [kit2*2 [kit4*2 kit4*2]]" (slow 0.7731 $ run 12))
|+| delay "0.1" |+| cutoff (scale 0.006 0.1 $ density 2 sine1) |+| speed "{1 3 2 1 4 1.5 0.9}%32" |+| resonance "0.5" |+| shape "0.2" |+| cut "83",
foldEvery [2,3,4,5] (slow 1.25) $ whenmod 5 3 (jux (iter 4)) $
slow 2 $ rev $
(slowspread (stut 128 0.25) [0.5, 0.25, 1, 1.5, 0.75, 1.25] $
(|+| accelerate "[-0.5 0.5]*8") $
sound (samples "numbers numbers/2 numbers ~ numbers ~ ~ ~" (density 2.7171 $ (run 10)))) |+| speed (foldEvery [2,3,4] ((*0.82) <$>) "{1.5 1.75 2 4 1.5 3 1.75}%128")
|+| shape "0.2"
|+| delay "0.3"] |+| delaytime "0.5" |+| delayfeedback "0.7"

hush
